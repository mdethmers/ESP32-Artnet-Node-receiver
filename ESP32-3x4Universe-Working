#define DEBUG_ETHERNET_WEBSERVER_PORT Serial
#define UNIQUE_SUBARTNET

// Debug Level from 0 to 4
//set Numstrips are mapped to pins. set pins accordingly
#define _ETHERNET_WEBSERVER_LOGLEVEL_ 3
#define NUM_LEDS_PER_STRIP 680
#define NUMSTRIPS 3
#define NB_CHANNEL_PER_LED 3 //Should be 4 if your sending tool is sending RGBW
#define COLOR_GRB
#define UNIVERSE_SIZE_IN_CHANNEL  (170 * 3)  //here we define a universe of 170 pixels each pixel is composed of 3 channels
#define START_UNIVERSE 0

#include <WebServer_ESP32_W5500.h>
#include "I2SClocklessLedDriver.h"
#include "Arduino.h"
#include "artnetESP32V2.h"

int pins[NUMSTRIPS] = { 2, 15, 0};
//int pins[1]={2};
#define NUMBER_OF_MAC 20

byte mac[][NUMBER_OF_MAC] = {
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x01 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x02 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x03 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x04 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x05 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x06 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x07 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x08 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x09 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x0A },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x0B },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x0C },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x0D },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x0E },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x0F },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x10 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x11 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x12 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0x13 },
  { 0xDE, 0xAD, 0xBE, 0xEF, 0xBE, 0x14 },
};

artnetESP32V2 artnet = artnetESP32V2();
I2SClocklessLedDriver driver;
  void displayfunction(void *param){
    subArtnet *subartnet = (subArtnet *)param;
     driver.showPixels(NO_WAIT,subartnet->data);
}

// Select the IP address according to your local network
// IPAddress myIP(192, 168, 1, 84);
// IPAddress myGW(192, 168, 1, 1);
// IPAddress mySN(255, 255, 255, 0);

void setup() {
  Serial.begin(115200);

  while (!Serial && (millis() < 5000));
  driver.initled(NULL, pins, NUMSTRIPS, NUM_LEDS_PER_STRIP);
  driver.setBrightness(20);

  ESP32_W5500_onEvent();
  ETH.begin(MISO_GPIO, MOSI_GPIO, SCK_GPIO, CS_GPIO, INT_GPIO, SPI_CLOCK_MHZ, ETH_SPI_HOST);
  //ETH.config(myIP, myGW, mySN); //Local IP Start
  ESP32_W5500_waitForConnect(); //dchp IP start
  // Serial.print(F("HTTP EthernetWebServer is @ IP : "));
  // Serial.println(ETH.localIP());

  //Output
  //addSubArtnet(Output universe start, #bits 680*1*3 = 2040, universe size = 510, callbackfunction )
  artnet.addSubArtnet(START_UNIVERSE, NUM_LEDS_PER_STRIP * NUMSTRIPS * NB_CHANNEL_PER_LED, UNIVERSE_SIZE_IN_CHANNEL, &displayfunction);


  artnet.setNodeName("Arnet Node esp32");

  if (artnet.listen(ETH.localIP(), 6454)) {
    Serial.print("artnet Listening on IP: ");
    Serial.println(ETH.localIP());
  }

  ESP32_W5500_waitForConnect();
}

void loop() {
  vTaskDelete(NULL);
}
